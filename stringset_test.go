package stringset_test

import (
	"testing"

	"github.com/TimSatke/stringset"
	"github.com/stretchr/testify/require"
)

func TestContains(t *testing.T) {
	require := require.New(t)

	// first paragraph of lorem ipsum
	set := stringset.New([]string{"lorem", "ipsum", "dolor", "sit", "amet", "consetetur", "sadipscing", "elitr", "sed", "diam", "nonumy", "eirmod", "tempor", "invidunt", "ut", "labore", "et", "dolore", "magna", "aliquyam", "erat", "sed", "diam", "voluptua", "at", "vero", "eos", "et", "accusam", "et", "justo", "duo", "dolores", "et", "ea", "rebum", "stet", "clita", "kasd", "gubergren", "no", "sea", "takimata", "sanctus", "est", "lorem", "ipsum", "dolor", "sit", "amet", "lorem", "ipsum", "dolor", "sit", "amet", "consetetur", "sadipscing", "elitr", "sed", "diam", "nonumy", "eirmod", "tempor", "invidunt", "ut", "labore", "et", "dolore", "magna", "aliquyam", "erat", "sed", "diam", "voluptua", "at", "vero", "eos", "et", "accusam", "et", "justo", "duo", "dolores", "et", "ea", "rebum", "stet", "clita", "kasd", "gubergren", "no", "sea", "takimata", "sanctus", "est", "lorem", "ipsum", "dolor", "sit", "amet"})

	// every word in the first paragraph of lorem ipsum
	require.True(set.Contains("lorem"))
	require.True(set.Contains("ipsum"))
	require.True(set.Contains("dolor"))
	require.True(set.Contains("sit"))
	require.True(set.Contains("amet"))
	require.True(set.Contains("consetetur"))
	require.True(set.Contains("sadipscing"))
	require.True(set.Contains("elitr"))
	require.True(set.Contains("sed"))
	require.True(set.Contains("diam"))
	require.True(set.Contains("nonumy"))
	require.True(set.Contains("eirmod"))
	require.True(set.Contains("tempor"))
	require.True(set.Contains("invidunt"))
	require.True(set.Contains("ut"))
	require.True(set.Contains("labore"))
	require.True(set.Contains("et"))
	require.True(set.Contains("dolore"))
	require.True(set.Contains("magna"))
	require.True(set.Contains("aliquyam"))
	require.True(set.Contains("erat"))
	require.True(set.Contains("sed"))
	require.True(set.Contains("diam"))
	require.True(set.Contains("voluptua"))
	require.True(set.Contains("at"))
	require.True(set.Contains("vero"))
	require.True(set.Contains("eos"))
	require.True(set.Contains("et"))
	require.True(set.Contains("accusam"))
	require.True(set.Contains("et"))
	require.True(set.Contains("justo"))
	require.True(set.Contains("duo"))
	require.True(set.Contains("dolores"))
	require.True(set.Contains("et"))
	require.True(set.Contains("ea"))
	require.True(set.Contains("rebum"))
	require.True(set.Contains("stet"))
	require.True(set.Contains("clita"))
	require.True(set.Contains("kasd"))
	require.True(set.Contains("gubergren"))
	require.True(set.Contains("no"))
	require.True(set.Contains("sea"))
	require.True(set.Contains("takimata"))
	require.True(set.Contains("sanctus"))
	require.True(set.Contains("est"))
	require.True(set.Contains("lorem"))
	require.True(set.Contains("ipsum"))
	require.True(set.Contains("dolor"))
	require.True(set.Contains("sit"))
	require.True(set.Contains("amet"))
	require.True(set.Contains("lorem"))
	require.True(set.Contains("ipsum"))
	require.True(set.Contains("dolor"))
	require.True(set.Contains("sit"))
	require.True(set.Contains("amet"))
	require.True(set.Contains("consetetur"))
	require.True(set.Contains("sadipscing"))
	require.True(set.Contains("elitr"))
	require.True(set.Contains("sed"))
	require.True(set.Contains("diam"))
	require.True(set.Contains("nonumy"))
	require.True(set.Contains("eirmod"))
	require.True(set.Contains("tempor"))
	require.True(set.Contains("invidunt"))
	require.True(set.Contains("ut"))
	require.True(set.Contains("labore"))
	require.True(set.Contains("et"))
	require.True(set.Contains("dolore"))
	require.True(set.Contains("magna"))
	require.True(set.Contains("aliquyam"))
	require.True(set.Contains("erat"))
	require.True(set.Contains("sed"))
	require.True(set.Contains("diam"))
	require.True(set.Contains("voluptua"))
	require.True(set.Contains("at"))
	require.True(set.Contains("vero"))
	require.True(set.Contains("eos"))
	require.True(set.Contains("et"))
	require.True(set.Contains("accusam"))
	require.True(set.Contains("et"))
	require.True(set.Contains("justo"))
	require.True(set.Contains("duo"))
	require.True(set.Contains("dolores"))
	require.True(set.Contains("et"))
	require.True(set.Contains("ea"))
	require.True(set.Contains("rebum"))
	require.True(set.Contains("stet"))
	require.True(set.Contains("clita"))
	require.True(set.Contains("kasd"))
	require.True(set.Contains("gubergren"))
	require.True(set.Contains("no"))
	require.True(set.Contains("sea"))
	require.True(set.Contains("takimata"))
	require.True(set.Contains("sanctus"))
	require.True(set.Contains("est"))
	require.True(set.Contains("lorem"))
	require.True(set.Contains("ipsum"))
	require.True(set.Contains("dolor"))
	require.True(set.Contains("sit"))
	require.True(set.Contains("amet"))

	require.False(set.Contains("ame"))
	require.False(set.Contains("amett"))
	require.False(set.Contains(""))
	require.False(set.Contains("a"))
	require.False(set.Contains(";")) // not contained anywhere in the set's tree
}

func TestEmptySet(t *testing.T) {
	require := require.New(t)

	set := stringset.New([]string{})
	require.False(set.Contains("amett"))
	require.False(set.Contains(""))
	require.False(set.Contains("a"))
	require.False(set.Contains(";"))
}

func TestEmptyStrings(t *testing.T) {
	require := require.New(t)

	set := stringset.New([]string{"", "a", "ab", "abc"})
	require.True(set.Contains(""))
	require.True(set.Contains("a"))
	require.True(set.Contains("ab"))
	require.True(set.Contains("abc"))
	require.False(set.Contains("abcd"))
}
